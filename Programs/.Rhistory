x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <-lm(y~x)
summary(fit)$coeficients
summary(fit)$coeficients
summary(fit)
library(mtcars)
library(UsingR)
mtcars
x <- mtcars$wt
y <- mtcars$mpg
fit<-lm(y~x)
summary(fit)
quantile(0.95,x,y)
quantile(x,y,0.95)
?quantile
fit<-lm(x~y)
summary(fit)
plot(x~y)
lm(y~x)
fit(lm(y~x))
fit<-plot(x~y)
fit<-lm(y~x)
mtcars
est<-predict(fit,data.frame(x))
abline(fit,col="red")
plot(x,y)
abline(fit,col="red")
predict(fit,data.frame(x=mean(x)), interval="confidence")
predict(fit,data.frame(x=3), interval="prediction")
sum((y-mean(y))^2)
fit2<-lm(y~I(x/2))
tbl2<-summary(fit2)$coefficients
mn<-tbl2[2,1]
std_err<-tbl2[2,2]
deg_fr<-fit2$df
mn + c(-1,1) * qt(0.975,df=deg_fr) * std_err
library(AppliedPredictiveModeling)
install.packages("caret")
library(AppliedPredictiveModeling)
library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
testIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[-testIndex,]
testing = adData[testIndex,]
adData = data.frame(predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
